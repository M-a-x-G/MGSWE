package NewLanguage.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum ProjectType {
  spring("spring", "spring"),
  nodeJS("nodeJS", "nodeJS");

  private String myName;
  public String getName() {
    return this.myName;
  }
  public String getValueAsString() {
    return this.myValue;
  }
  public static List<ProjectType> getConstants() {
    List<ProjectType> list = ListSequence.fromList(new LinkedList<ProjectType>());
    ListSequence.fromList(list).addElement(ProjectType.spring);
    ListSequence.fromList(list).addElement(ProjectType.nodeJS);
    return list;
  }
  public static ProjectType getDefault() {
    return ProjectType.spring;
  }
  public static ProjectType parseValue(String value) {
    if (value == null) {
      return ProjectType.getDefault();
    }
    if (value.equals(ProjectType.spring.getValueAsString())) {
      return ProjectType.spring;
    }
    if (value.equals(ProjectType.nodeJS.getValueAsString())) {
      return ProjectType.nodeJS;
    }
    return ProjectType.getDefault();
  }
  private String myValue;
  ProjectType(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }
  public String getValue() {
    return this.myValue;
  }
}
